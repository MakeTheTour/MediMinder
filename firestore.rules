
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Allow admin to read/write all user documents
      allow read, write: if request.auth != null && request.auth.token.email == 'admin@mediminder.com';

      match /{allPaths=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
        // Allow admin full access to subcollections
        allow read, write: if request.auth != null && request.auth.token.email == 'admin@mediminder.com';
      }
    }
    
    match /invitations/{invitationId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
                  (request.auth.uid == resource.data.inviterId || request.auth.token.email == resource.data.inviteeEmail);
      allow update, delete: if request.auth != null && 
                         (request.auth.uid == resource.data.inviterId || request.auth.uid == resource.data.inviteeId);
      
      // Allow list queries for user's sent and received invitations
      allow list: if request.auth != null && 
                   (request.query.where.get('inviterId') == request.auth.uid || 
                    request.query.where.get('inviteeEmail') == request.auth.token.email);
    }
  }
}
