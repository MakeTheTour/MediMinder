
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      // Users can only read/write their own documents
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Allow users to read/write their own subcollections
      match /{subcollection}/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Allow authenticated users to list documents in the 'users' collection.
    // This is required for the email search functionality to work.
    // It is secure because the 'read' rule above still prevents reading the full document content of other users.
    match /users/{userId} {
      allow list: if request.auth != null;
    }

    match /invitations/{invitationId} {
      // Inviter and invitee can read the invitation
      allow read: if request.auth != null && (resource.data.inviterId == request.auth.uid || resource.data.inviteeEmail == request.auth.token.email);
      // Only the inviter can create an invitation
      allow create: if request.auth != null && request.resource.data.inviterId == request.auth.uid;
      // Inviter and invitee can update or delete the invitation
      allow update, delete: if request.auth != null && (resource.data.inviterId == request.auth.uid || resource.data.inviteeEmail == request.auth.token.email);
    }
  }
}
