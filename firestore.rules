
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only read/write their own data, including all subcollections.
    match /users/{userId}/{documents=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Invitations can be created by any authenticated user.
    match /invitations/{invitationId} {
      allow create: if request.auth != null;
      // Users can read an invitation if they sent it or are the recipient.
      allow read: if request.auth != null && (request.resource.data.inviterId == request.auth.uid || request.resource.data.inviteeEmail == request.auth.token.email);
       // Users can update an invitation (to accept/decline) if they are the recipient.
      allow update: if request.auth != null && request.resource.data.inviteeEmail == request.auth.token.email;
      // Users can delete an invitation if they sent it.
      allow delete: if request.auth != null && resource.data.inviterId == request.auth.uid;
    }

    // Only admins can read/write the list of subscriptions
    match /subscriptions/{subscriptionId} {
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.email == 'admin@mediminder.com';
    }

    // All users can read ads, only admins can write them
    match /ads/{adId} {
        allow read: if true;
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.email == 'admin@mediminder.com';
    }

    // Only admins can read/write API settings
     match /settings/api {
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.email == 'admin@mediminder.com';
    }
  }
}
